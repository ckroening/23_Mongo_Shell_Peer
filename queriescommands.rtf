{\rtf1\ansi\ansicpg1252\cocoartf1348\cocoasubrtf170
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww24560\viewh7900\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs24 \cf0 \ul \ulc0 queries.bson:\
\ulnone \
0. setup:  \
	terminal: mongod (mongoDB started)\
	new terminal tab: mongo (mongoDB shell)\
	in mongoDB shell: \
		use challenge (challenge database created)\
		db.createCollection(\'93bios\'94)  (new bios collection created)\
		db.bios.insert(<document data copied & pasted from bios.bson file>)\
	\ul \
\ulnone 1. file: queries.bson, created: \
		db.createCollection(\'93queries\'94)\
		show collections\
		(queries is in the list)\
\
2. 	a. find documents that have awards:\
		db.bios.find(\{"awards":\{$exists:true\}\})\
	b. add found data to queries collection:\
		db.queries.insert(\{ haveawards: [\{<data found from the above command separated by commas>\},\{\},\{\}] \})\
\
3. 	a. find docs that don\'92t have awards:\
		db.bios.find(\{\'93awards\'94:\{$exists:false\}\})\
	b. add found data to queries collection\
		db.queries.insert(\{ noawards: [\{<data found from the above command separated by commas>\},\{\},\{\}] \})\
\
4.	a. find docs with contribs for OOP or UNIX:\
		db.bios.find(\{\'93contribs\'94:\'94OOP\'94\})\
		db.bios.find(\{\'93contribs\'94:\'94UNIX\'94\})\
 	b. add found data to queries collection:\
		db.queries.insert(\{ OOPUNIXcontribs: [\{ <data> \}, \{\}, \{\}] \})\
\
5.	a. find docs with \'93Turing Award\'94 awards:\
		db.bios.find(\{"awards":\{$elemMatch:\{"award":"Turing Award"\}\}\}).pretty()\
	b. add to queries collection:\
		db.queries.insert(\{ turingaward: [\{\},\{\},\{\}] \})\
\
6.	a. find docs with ID\'92s between 3 and 7:\
		db.bios.find( \{_id: \{$in: [4,5,6]\}\})\
	b. add to queries collection:\
		db.queries.insert(\{ ids: [\{\},\{\},\{\}] \})\
\
7.	a. find docs with awards before 2000:\
		db.bios.find(\{"awards":\{$elemMatch:\{"year":\{$lt:2000\}\}\}\})\
	b. Add to queries collection: \
		db.queries.insert(\{ awardbefore2000: [\{\},\{\},\{\}] \})\
\
8.	a. find docs with birth years, but no death years:\
		db.bios.find(\{\'93birth\'94:\{$exists:true\},\'94death\'94\{$exists:false\}\})\
	b. add to queries collection:\
		db.queries.insert(\{ birthnodeath: [\{\},\{\}] \})\
\
\
\
	 \
\
}